# Example of directly setting frequently used properties:
# (takes precedence over Java API properties)
# "host" parameter format: [Protocol:]Host[:Port]
solace.java.host=tcps://localhost:55443

#solace.java.msgVpn=default
#solace.java.clientUsername=default
#solace.java.clientPassword=default
#solace.java.connectRetries=1
#solace.java.reconnectRetries=5
#solace.java.connectRetriesPerHost=20
#solace.java.reconnectRetryWaitInMillis=3000

solace.java.msgVpn=default
solace.java.clientUsername=testUser
#solace.java.clientName=client-name
solace.java.connectRetries=3
solace.java.reconnectRetries=1
solace.java.connectRetriesPerHost=2
solace.java.reconnectRetryWaitInMillis=1000
solace.java.messageAckMode=client_ack
solace.java.reapplySubscriptions=true
solace.java.advanced.jcsmp.TOPIC_DISPATCH=true
solace.java.apiProperties.AUTHENTICATION_SCHEME=AUTHENTICATION_SCHEME_OAUTH2
solace.java.apiProperties.SSL_VALIDATE_CERTIFICATE=false
solace.java.springOauth2ClientRegistrationId=my-oauth2-client

spring.security.oauth2.client.registration.my-oauth2-client.provider=my-auth-server
spring.security.oauth2.client.registration.my-oauth2-client.client-id=solclient_oauth1
spring.security.oauth2.client.registration.my-oauth2-client.client-secret=S3Mafj9Ix8KCWcHSBMTv40GLNd7OsKKz
spring.security.oauth2.client.registration.my-oauth2-client.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.my-oauth2-client.scope=openid

spring.security.oauth2.client.provider.my-auth-server.token-uri=https://localhost:10443/auth/realms/solace-oauth-resource-server-role/protocol/openid-connect/token

# Example use of any other Solace Java API properties:
# The name of the property can be obtained from
# https://docs.solace.com/API-Developer-Online-Ref-Documentation/java/constant-values.html 
#solace.java.apiProperties.reapply_subscriptions=false

server.port=8096
